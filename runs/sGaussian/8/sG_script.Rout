
R version 3.5.1 (2018-07-02) -- "Feather Spray"
Copyright (C) 2018 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> # Simulator sG
> 
> library(CurveRegistration)
> library(protoABC)
> library(parallel)
> library(dplyr)

Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

> 
> # Settings ----------------------
> 
> run_number = 1
> 
> set.seed(1)
> 
> Time <- seq(0, 300, by = 1.5)
> alpha = seq(25, 300, by = 40)
> theta = c(1, 0.01, 0.7)
> 
> n_runs = 4000
> pacc_final = 0.02
> 
> var_mat <- diag(c(9, 0.01^2))
> 
> y <- simulator_sGaussian(Time, param = theta, alpha = alpha)
> y_kmmd <- EasyMMD::kmmd(y, var = var_mat)
> x <- simulator_sGaussian(Time, param = theta, alpha = alpha)
> 
> distance_fun(y, x, registration = TRUE, distance = "MMD", y_kmmd = y_kmmd, var = var_mat, threshold = 6)
[1] 0.005845322
> 
> distance_args <- list(
+   Time = Time,
+   alpha = alpha,
+   obs = y,
+   var = var_mat,
+   threshold = 6,
+   registration = TRUE,
+   distance = "MMD",
+   method = "DP2",
+   mean_global = 0,
+   sigma_a = 5
+ )
> 
> distance_args$y_kmmd <- EasyMMD::kmmd(distance_args$obs, var = distance_args$var)
> 
> loss_sG(theta, distance_args)
[1] 0.006074264
> 
> # ABC -----------------
> 
> prior_sGaussian <- prior_unif(c(0, 0, 0), c(3, 0.02, 2), var_names = c("sigma_phi", "sigma_e", "scale_phi"), eval = FALSE)
> 
> prior_sGaussian_eval <- prior_unif(c(0, 0, 0), c(3, 0.02, 2), var_names = c("sigma_phi", "sigma_e", "scale_phi"), eval = TRUE)
> 
> cov_func <- function(x){
+   robust::covRob(x)$cov
+ }
> 
> abc_control <- list(
+   prior_eval = prior_sGaussian_eval,
+   n = n_runs,
+   pacc_final = pacc_final
+ )
> 
> #cl <- makeCluster(detectCores() - 1) #USER
> cl <- "mclapply" #HPC
> 
> ## sigma_a <- 5 -----------------
> 
> distance_args$sigma_a <- 5
> 
> ### Registration <- FALSE -------------
> 
> distance_args$registration <- FALSE
> 
> #### Distance <- "FR" -------------------
> 
> distance_args$distance <- "FR"
> 
> ABC_sG_5_RF_FR <- abc_start(prior_sGaussian, loss_sG, distance_args = distance_args, method = "RABC", control = abc_control, cl = cl) %>%
+   mutate(
+     registration = distance_args$registration,
+     distance     = distance_args$distance,
+     sigma_a      = distance_args$sigma_a
+   )
********************************
Acceptance prob of MCMC was 0.25565
Number of MCMC moves for next iteration is 16
Number of unique particles is 3818
dist_max is 3.71007975992064
dist_next is 3.4758949770044
********************************
Acceptance prob of MCMC was 0.13359375
Number of MCMC moves for next iteration is 33
Number of unique particles is 3623
dist_max is 3.4758949770044
dist_next is 3.30785538876507
********************************
Acceptance prob of MCMC was 0.0674393939393939
Number of MCMC moves for next iteration is 66
Number of unique particles is 3525
dist_max is 3.30785538876507
dist_next is 3.1818608820835
********************************
Acceptance prob of MCMC was 0.0360984848484849
Number of MCMC moves for next iteration is 126
Number of unique particles is 3493
dist_max is 3.1818608820835
dist_next is 3.07389761302943
> 
> save(ABC_sG_5_RF_FR, file = "ABC_sG_5_RF_FR.RData")
> 
> summary(ABC_sG_5_RF_FR)
   sigma_phi            sigma_e            scale_phi         registration   
 Min.   :0.0005092   Min.   :4.971e-06   Min.   :0.0000233   Mode :logical  
 1st Qu.:1.5067589   1st Qu.:3.307e-03   1st Qu.:0.9990066   FALSE:4000     
 Median :2.1396812   Median :7.158e-03   Median :1.4336265                  
 Mean   :1.9450675   Mean   :8.022e-03   Mean   :1.3221987                  
 3rd Qu.:2.5817500   3rd Qu.:1.235e-02   3rd Qu.:1.7498258                  
 Max.   :2.9999756   Max.   :2.000e-02   Max.   :1.9998939                  
   distance            sigma_a 
 Length:4000        Min.   :5  
 Class :character   1st Qu.:5  
 Mode  :character   Median :5  
                    Mean   :5  
                    3rd Qu.:5  
                    Max.   :5  
> 
> #### Distance <- "MMD" -------------------
> 
> distance_args$distance <- "MMD"
> 
> ABC_sG_5_RF_MD <- abc_start(prior_sGaussian, loss_sG, distance_args = distance_args, method = "RABC", control = abc_control, cl = cl) %>%
+   mutate(
+     registration = distance_args$registration,
+     distance     = distance_args$distance,
+     sigma_a      = distance_args$sigma_a
+   )
********************************
Acceptance prob of MCMC was 0.33655
Number of MCMC moves for next iteration is 12
Number of unique particles is 3917
dist_max is 0.00915792718825434
dist_next is 0.00833859150968343
********************************
Acceptance prob of MCMC was 0.228375
Number of MCMC moves for next iteration is 18
Number of unique particles is 3797
dist_max is 0.00833859150968343
dist_next is 0.00783033600412858
********************************
Acceptance prob of MCMC was 0.154194444444444
Number of MCMC moves for next iteration is 28
Number of unique particles is 3732
dist_max is 0.00783033600412858
dist_next is 0.00743084720814313
********************************
Acceptance prob of MCMC was 0.097
Number of MCMC moves for next iteration is 46
Number of unique particles is 3660
dist_max is 0.00743084720814313
dist_next is 0.00712160004454635
********************************
Acceptance prob of MCMC was 0.0595978260869565
Number of MCMC moves for next iteration is 75
Number of unique particles is 3608
dist_max is 0.00712160004454635
dist_next is 0.0068656656259997
********************************
Acceptance prob of MCMC was 0.03844
Number of MCMC moves for next iteration is 118
Number of unique particles is 3631
dist_max is 0.0068656656259997
dist_next is 0.00663142545753385
********************************
Acceptance prob of MCMC was 0.0227966101694915
Number of MCMC moves for next iteration is 200
Number of unique particles is 3608
dist_max is 0.00663142545753385
dist_next is 0.00641706578036851
> 
> save(ABC_sG_5_RF_MD, file = "ABC_sG_5_RF_MD.RData")
> 
> summary(ABC_sG_5_RF_MD)
   sigma_phi           sigma_e            scale_phi      registration   
 Min.   :0.001201   Min.   :1.672e-05   Min.   :0.0389   Mode :logical  
 1st Qu.:0.388130   1st Qu.:7.326e-03   1st Qu.:0.5500   FALSE:4000     
 Median :0.684273   Median :8.993e-03   Median :0.8077                  
 Mean   :0.737629   Mean   :9.058e-03   Mean   :0.8600                  
 3rd Qu.:1.032102   3rd Qu.:1.084e-02   3rd Qu.:1.1223                  
 Max.   :2.373290   Max.   :1.746e-02   Max.   :1.9842                  
   distance            sigma_a 
 Length:4000        Min.   :5  
 Class :character   1st Qu.:5  
 Mode  :character   Median :5  
                    Mean   :5  
                    3rd Qu.:5  
                    Max.   :5  
> 
> ### Registration <- TRUE -------------
> 
> distance_args$registration <- TRUE
> 
> #### Distance <- "FR" -------------------
> 
> distance_args$distance <- "FR"
> 
> ABC_sG_5_RT_FR <- abc_start(prior_sGaussian, loss_sG, distance_args = distance_args, method = "RABC", control = abc_control, cl = cl) %>%
+   mutate(
+     registration = distance_args$registration,
+     distance     = distance_args$distance,
+     sigma_a      = distance_args$sigma_a
+   )
********************************
Acceptance prob of MCMC was 0.3542
Number of MCMC moves for next iteration is 11
Number of unique particles is 3926
dist_max is 2.04546316982871
dist_next is 1.81807534698495
********************************
Acceptance prob of MCMC was 0.2275
Number of MCMC moves for next iteration is 18
Number of unique particles is 3763
dist_max is 1.81807534698495
dist_next is 1.67719041542456
********************************
Acceptance prob of MCMC was 0.139416666666667
Number of MCMC moves for next iteration is 31
Number of unique particles is 3679
dist_max is 1.67719041542456
dist_next is 1.57096898852223
********************************
Acceptance prob of MCMC was 0.0856129032258064
Number of MCMC moves for next iteration is 52
Number of unique particles is 3651
dist_max is 1.57096898852223
dist_next is 1.47684988729451
********************************
Acceptance prob of MCMC was 0.0500288461538462
Number of MCMC moves for next iteration is 90
Number of unique particles is 3635
dist_max is 1.47684988729451
dist_next is 1.38810326295471
********************************
Acceptance prob of MCMC was 0.0312388888888889
Number of MCMC moves for next iteration is 146
Number of unique particles is 3588
dist_max is 1.38810326295471
dist_next is 1.3223513095279
> 
> save(ABC_sG_5_RT_FR, file = "ABC_sG_5_RT_FR.RData")
> 
> summary(ABC_sG_5_RT_FR)
   sigma_phi         sigma_e            scale_phi     registration  
 Min.   :0.4167   Min.   :1.585e-06   Min.   :0.336   Mode:logical  
 1st Qu.:1.1520   1st Qu.:1.683e-03   1st Qu.:1.071   TRUE:4000     
 Median :1.4806   Median :3.778e-03   Median :1.343                 
 Mean   :1.4842   Mean   :4.623e-03   Mean   :1.340                 
 3rd Qu.:1.7946   3rd Qu.:6.684e-03   3rd Qu.:1.624                 
 Max.   :2.8330   Max.   :1.843e-02   Max.   :2.000                 
   distance            sigma_a 
 Length:4000        Min.   :5  
 Class :character   1st Qu.:5  
 Mode  :character   Median :5  
                    Mean   :5  
                    3rd Qu.:5  
                    Max.   :5  
> 
> #### Distance <- "MMD" -------------------
> 
> distance_args$distance <- "MMD"
> 
> ABC_sG_5_RT_MD <- abc_start(prior_sGaussian, loss_sG, distance_args = distance_args, method = "RABC", control = abc_control, cl = cl) %>%
+   mutate(
+     registration = distance_args$registration,
+     distance     = distance_args$distance,
+     sigma_a      = distance_args$sigma_a
+   )
********************************
Acceptance prob of MCMC was 0.3489
Number of MCMC moves for next iteration is 11
Number of unique particles is 3928
dist_max is 0.00765180459336904
dist_next is 0.00701163747234952
********************************
Acceptance prob of MCMC was 0.2455
Number of MCMC moves for next iteration is 17
Number of unique particles is 3828
dist_max is 0.00701163747234952
dist_next is 0.00657051435133619
********************************
Acceptance prob of MCMC was 0.1645
Number of MCMC moves for next iteration is 26
Number of unique particles is 3760
dist_max is 0.00657051435133619
dist_next is 0.00622951783082002
********************************
Acceptance prob of MCMC was 0.0996153846153846
Number of MCMC moves for next iteration is 44
Number of unique particles is 3684
dist_max is 0.00622951783082002
dist_next is 0.00596393948531273
********************************
Acceptance prob of MCMC was 0.0625909090909091
Number of MCMC moves for next iteration is 72
Number of unique particles is 3671
dist_max is 0.00596393948531273
dist_next is 0.00573798225308185
********************************
Acceptance prob of MCMC was 0.0392083333333333
Number of MCMC moves for next iteration is 116
Number of unique particles is 3638
dist_max is 0.00573798225308185
dist_next is 0.00554651083010978
********************************
Acceptance prob of MCMC was 0.0234181034482759
Number of MCMC moves for next iteration is 195
Number of unique particles is 3598
dist_max is 0.00554651083010978
dist_next is 0.00537555795764062
> 
> save(ABC_sG_5_RT_MD, file = "ABC_sG_5_RT_MD.RData")
> 
> summary(ABC_sG_5_RT_MD)
   sigma_phi           sigma_e            scale_phi       registration  
 Min.   :0.009257   Min.   :0.0006999   Min.   :0.09575   Mode:logical  
 1st Qu.:0.580637   1st Qu.:0.0061966   1st Qu.:0.73968   TRUE:4000     
 Median :0.917620   Median :0.0077857   Median :0.97540                 
 Mean   :0.948129   Mean   :0.0078512   Mean   :1.01427                 
 3rd Qu.:1.249002   3rd Qu.:0.0094274   3rd Qu.:1.26006                 
 Max.   :2.553771   Max.   :0.0167502   Max.   :1.98992                 
   distance            sigma_a 
 Length:4000        Min.   :5  
 Class :character   1st Qu.:5  
 Mode  :character   Median :5  
                    Mean   :5  
                    3rd Qu.:5  
                    Max.   :5  
> 
> # Packaging everything up
> 
> sessionInfo()
R version 3.5.1 (2018-07-02)
Platform: x86_64-pc-linux-gnu (64-bit)
Running under: SUSE Linux Enterprise Server 12 SP2

Matrix products: default
BLAS/LAPACK: /pkg/suse12/software/openblas/0.2.20-gcc-6.4.0-2.28/lib/libopenblas_sandybridgep-r0.2.20.so

locale:
 [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              
 [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    
 [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8   
 [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                 
 [9] LC_ADDRESS=C               LC_TELEPHONE=C            
[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       

attached base packages:
[1] parallel  stats     graphics  grDevices utils     datasets  methods  
[8] base     

other attached packages:
[1] bindrcpp_0.2.2          dplyr_0.7.8             protoABC_0.4.8         
[4] CurveRegistration_0.0.4

loaded via a namespace (and not attached):
 [1] Rcpp_1.0.0        bindr_0.1.1       magrittr_1.5      splines_3.5.1    
 [5] maps_3.3.0        tidyselect_0.2.5  doParallel_1.0.14 EasyMMD_0.5.1    
 [9] viridisLite_0.3.0 lattice_0.20-38   R6_2.3.0          rlang_0.3.1      
[13] foreach_1.4.4     matrixcalc_1.0-3  fields_9.6        dotCall64_1.0-0  
[17] grid_3.5.1        spam_2.2-1        coda_0.19-2       iterators_1.0.10 
[21] assertthat_0.2.0  tibble_2.0.1      crayon_1.3.4      purrr_0.3.0      
[25] codetools_0.2-16  glue_1.3.0        fdasrvf_1.8.3     compiler_3.5.1   
[29] pillar_1.3.1      mvtnorm_1.0-8     pkgconfig_2.0.2  
> 
> ABC_sG_5 <- dplyr::bind_rows(ABC_sG_5_RF_FR, ABC_sG_5_RF_MD, ABC_sG_5_RT_FR, ABC_sG_5_RT_MD)
> 
> save(ABC_sG_5, file = "ABC_sG_5.RData")
> 
> save.image()
> 
> 
> 
> 
> 
> proc.time()
     user    system   elapsed 
51291.476    26.231  3757.175 
